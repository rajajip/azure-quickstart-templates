{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {    
    "adminUsername": {
      "type": "string",      
      "metadata": {
        "description": "Username you want to use for the VM the template creates"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password you want to use to log in to the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [ "Standard_A2_v2", "Standard_A4m_v2", "Standard_A8m_v2", "Standard_D2_v2", "Standard_D4_v2", "Standard_D5_v2", "Standard_D2_v3", "Standard_D8_v3", "Standard_D32_v3"],
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "[concat('appgw_', uniquestring(resourceGroup().id))]",
      "metadata": {
        "description": "The DNS name (prefix) you want to use for the VM to map against its public IP"
      }
    },
    "appGwAccessLogsBlobSasUri": {
      "type": "string",
      "metadata": {
        "description": "The SAS URL connection string for the storage account blog where your Application Gateway Access Logs are stored"
      }
    },
    "filterRegexForAppGwAccessLogs": {
      "type": "string",
      "defaultValue": ".*",
      "metadata": {
        "description": "A regex to use to filter the Application Gateway Access Logs to a specific subset. For example, if you have multiple application gateways publishing logs to the same storage account blob, and you only want GoAccess to surface traffic stats for say one of the Application Gateways, you can provide a regex for this field to filter to just that instance."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "nicName": "[concat(parameters('dnsNameForPublicIP'), '_vmnic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",  
    "subnetName": "DefaultSubnet",
    "publicIPAddressName": "[concat(parameters('dnsNameForPublicIP'), '_publicip')]",    
    "vmName": "[parameters('dnsNameForPublicIP')]",   
    "virtualNetworkName": "[concat(parameters('dnsNameForPublicIP'), '_vnet')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "appGwAccessLogsBlobSasUriVar": "[concat('\"', parameters('appGwAccessLogsBlobSasUri'), '\"')]",
    "filterRegexForAppGwAccessLogsVar": "[concat('\"|', parameters('filterRegexForAppGwAccessLogs'), '|\"')]"
  },
  "resources": [    
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [        
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),'_osdisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmName'),'_datadisk1')]",
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/newuserscript')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [            
            "https://appgwloganalyzergoaccess.blob.core.windows.net/loganalyzerservice/scripts/setup_vm.sh?st=2018-09-12T07%3A09%3A54Z&se=2050-09-13T07%3A09%3A00Z&sp=rl&sv=2018-03-28&sr=b&sig=y57URB%2FiGrAawyHhDb6waznnyHvSrOsAHEcF4cu9BFw%3D"            
          ],
          "commandToExecute": "[concat('sh setup_vm.sh ' , variables('appGwAccessLogsBlobSasUriVar'), ' ', variables('filterRegexForAppGwAccessLogsVar'))]"
        }
      }
    }
  ],
  "outputs": {
    "goAccessReportUrl": {
      "type": "string",
      "value": "[concat(reference(variables('publicIPAddressName')).dnsSettings.fqdn, '/report.html']"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    }
  }
}
